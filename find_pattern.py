def find_dna_substring(dna_str, sub_str):
    # for a given dna_string, we want to find every index of where the start of the sub_string can be found 
    pos_of_subtring = [] # the datastructure that we want to store our indexes in

    # we need to loop over a substring of our data, sequent.
    for start_index in range(0,len(dna_str)-len(sub_str)+1): # range(0, 14)
        # we need to check if that specific sequence of n characters, is similar to the substring/ pattern that we are looking for
        if dna_str[start_index:start_index + len(sub_str)] == sub_str: #dna_str[16,20]
            # if it matches,  we need to save the position of that part in our defined data_structure called pos_of_substring
            pos_of_subtring.append(start_index)

    # we want to return, all that datastructure, which contains all the start-indexes that are similar to or pattern/ sub_string
    return pos_of_subtring

dna_str = 'GCGGGGATCGATAAACCTAACTCCACGATCGTTCTTCGGACTATCTTACCCAGGGAAAAATAGAGGCATCTTTCCAGCAATAAACCGAATTCGCCGTTCTTATATAGGAGTCCGAACGTGTTGGGATTCTGTTTCGCCCTGTCCTATCGTGCGATATCTAAGAAAACCCCTCACTGCAAGTAAAAGATTGTTGGAAAGATTGATGGCGCATGACTGGCAGGACAATAGAGCCCCCATGGGAACCATGGAGATGATGAGAGCGTCCTGAGAATGATTACCGCGACAATTCCGAGTTTAAGGGCCGCCCAGCATTATATTGTCAGCCGAGTCTGGTGTGTGAACAGCCCGAACACTGGGGCCGAGGGAACCTGCAACCTTTAAAATGTAAAAAATGAGGCGCCATGTAGATGGCGTTGGACTAATTATTCCGATCGGAAAAACTCCTAAAGAGGGCTCGAATCTTGTGTGGGGGGGCGGCCTTAATAACATCGGTGGTCAACGTCAAGTACGCGGCACCTATTGCAATGTCAAGCTATATTATCTACCTTGACTGAAAGACACCCTATAAATGGCCAAACAATCCACGACAACAGTTCACTAGGTGATGGATAACCCTGTGTACCAGCCCTCTTGTCGGTAGTAGAGCGGGAAAGCTGTGATGCTTATCTGTGCGATGGGGTGTAACGATCCCTTACCACGACAGACGCTGCAACGCCGCACCATATCCCTTAGTCCCATGTTCTAGTTCCCGCCAGTACAAGGCAATTCATATGACAAGATGGACTTTGCCCCGGTAGGGACGTTGGACTCCCACCAGATCCTCGCTATCCTATGCTATTCCTGTAAACACATGGTGCCATATTCAGGCGTGCGCGGGGATCGATAAACCTAACTCCACGATCGTTCTTCGGACTATCTTACCCAGGGAAAAATAGAGGCATCTTTCCAGCAATAAACCGAATTCGCCGTTCTTATATAGGAGTCCGAACGTGTTGGGATTCTGTTTCGCCCTGTCCTATCGTGCGATATCTAAGAAAACCCCTCACTGCAAGTAAAAGATTGTTGGAAAGATTGATGGCGCATGACTGGCAGGACAATAGAGCCCCCATGGGAACCATGGAGATGATGAGAGCGTCCTGAGAATGATTACCGCGACAATTCCGAGTTTAAGGGCCGCCCAGCATTATATTGTCAGCCGAGTCTGGTGTGTGAACAGCCCGAACACTGGGGCCGAGGGAACCTGCAACCTTTAAAATGTAAAAAATGAGGCGCCATGTAGATGGCGTTGGACTAATTATTCCGATCGGAAAAACTCCTAAAGAGGGCTCGAATCTTGTGTGGGGGGGCGGCCTTAATAACATCGGTGGTCAACGTCAAGTACGCGGCACCTATTGCAATGTCAAGCTATATTATCTACCTTGACTGAAAGACACCCTATAAATGGCCAAACAATCCACGACAACAGTTCACTAGGTGATGGATAACCCTGTGTACCAGCCCTCTTGTCGGTAGTAGAGCGGGAAAGCTGTGATGCTTATCTGTGCGATGGGGTGTAACGATCCCTTACCACGACAGACGCTGCAACGCCGCACCATATCCCTTAGTCCCATGTTCTAGTTCCCGCCAGTACAAGGCAATTCATATGACAAGATGGACTTTGCCCCGGTAGGGACGTTGGACTCCCACCAGATCCTCGCTATCCTATGCTATTCCTGTAAACACATGGTGCCATATTCAGGCGTGCGCGGGGATCGATAAACCTAACTCCACGATCGTTCTTCGGACTATCTTACCCAGGGAAAAATAGAGGCATCTTTCCAGCAATAAACCGAATTCGCCGTTCTTATATAGGAGTCCGAACGTGTTGGGATTCTGTTTCGCCCTGTCCTATCGTGCGATATCTAAGAAAACCCCTCACTGCAAGTAAAAGATTGTTGGAAAGATTGATGGCGCATGACTGGCAGGACAATAGAGCCCCCATGGGAACCATGGAGATGATGAGAGCGTCCTGAGAATGATTACCGCGACAATTCCGAGTTTAAGGGCCGCCCAGCATTATATTGTCAGCCGAGTCTGGTGTGTGAACAGCCCGAACACTGGGGCCGAGGGAACCTGCAACCTTTAAAATGTAAAAAATGAGGCGCCATGTAGATGGCGTTGGACTAATTATTCCGATCGGAAAAACTCCTAAAGAGGGCTCGAATCTTGTGTGGGGGGGCGGCCTTAATAACATCGGTGGTCAACGTCAAGTACGCGGCACCTATTGCAATGTCAAGCTATATTATCTACCTTGACTGAAAGACACCCTATAAATGGCCAAACAATCCACGACAACAGTTCACTAGGTGATGGATAACCCTGTGTACCAGCCCTCTTGTCGGTAGTAGAGCGGGAAAGCTGTGATGCTTATCTGTGCGATGGGGTGTAACGATCCCTTACCACGACAGACGCTGCAACGCCGCACCATATCCCTTAGTCCCATGTTCTAGTTCCCGCCAGTACAAGGCAATTCATATGACAAGATGGACTTTGCCCCGGTAGGGACGTTGGACTCCCACCAGATCCTCGCTATCCTATGCTATTCCTGTAAACACATGGTGCCATATTCAGGCGTGC' # this is the dna_string that we want to scan for patterns of nucleotides
sub_str = 'ATAT' # this is the sub-string that we want to look for in our dna_string

print(find_dna_substring(dna_str,sub_str))

print(dna_str[1185:1189])
